@import "base/variables.scss";
@import "base/placeholders.scss";

.alert{
  @extend %color-alert;
}

.success{
  @extend %color-success;
}

.info{
  @extend %color-info;
}

.warning{
  @extend %color-warning;
}

.default{
  @extend %color-default;
}

.primary{
  @extend %color-primary;
}

.accent{
  @extend %color-accent;
}

$radius-value: 4px;
%radius{
  border-radius: $radius-value;
}

@mixin rotate( $val: 90deg ) {
  -webkit-transform: rotate($val);
     -moz-transform: rotate($val);
      -ms-transform: rotate($val);
       -o-transform: rotate($val);
          transform: rotate($val);
}

@mixin scaleX($val) {
  -webkit-transform: scaleX($val);
     -moz-transform: scaleX($val);
      -ms-transform: scaleX($val);
       -o-transform: scaleX($val);
          transform: scaleX($val);
}

@mixin flexbox{
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -ms-flex-direction: row;
  -ms-flex-align: stetch;
}
@mixin flexbox-val($val:1) {
  -webkit-box-flex: $val;
     -moz-box-flex: $val;
      -webkit-flex: $val;
         -moz-flex: $val;
          -ms-flex: $val;
              flex: $val;
}
// a mixin for height and line-height
@mixin ht-lh($Value) {
    height: ($Value) + px;
    line-height: ($Value) + px;
}
// a mixin for height, width
@mixin ht-w($Value) {
    height: ($Value) + px;
    width: ($Value) + px;
}
// a mixin for height, width, and line-height
@mixin ht-w-lh($Value) {
    height: ($Value) + px;
    width: ($Value) + px;
    line-height: ($Value) + px;
}

//this is used within the botttom-cta component
//I believe this was used in the the Training Center project
@mixin vertical-center{
  display: flex;
  flex-direction: column;
  justify-content: center;
}
// a mixin for the social-search sliding effect within the header
@mixin header-expand{
  height:0;
  overflow-y: hidden;
  transition: all 0.4s cubic-bezier(0, 1, 0.5, 1);
}
// $h = horizontal length
// $v = vertical length
// $b = blur radius
// $s = spread radius
// $c = shadow color
@mixin box-shadow($h: 0px, $v:6px, $b: 24px, $s: -01px, $c: rgba(0,0,0,0.2)){
  -webkit-box-shadow: $h $v $b $s $c;
     -moz-box-shadow: $h $v $b $s $c;
          box-shadow: $h $v $b $s $c;
}

a{
  color:$color-accent;
  &:focus{
    color:$color-accent;
  }
  @extend %transition;
  // &:link{}
  // &:visited{}
  // &:active{}
  &:hover{
    color: $color-primary;
  }
}

time{
  color:$color-dark-shade;
}

//======================================================================

// Placeholders
// Didnt't include a way to use this yet

$h1-font-size:2.75rem; //44px

$h2-font-size:2.3125rem; //37px

$h3-font-size:1.6875rem; //27px

$h4-font-size:1.4375rem; //23px

$h5-font-size:1.125rem; //18px

$h6-font-size:1rem; //16px

$small-font-size:80%;


//======================================================================

// Media Query Mixins
@mixin small-screen{
  @media only screen and (max-width: 40em) {
    @content;
  }
}

@mixin small-screen-landscape{
  @media only screen and (max-width: 40em) and (orientation: landscape) {
    @content;
  }
}

@mixin medium-screen{
  @media only screen and (min-width: 40.063em) {
    @content;
  }
}
@mixin medium-screen-only{
  @media only screen and (min-width: 40.063em) and (max-width: 64em) {
    @content;
  }
}
@mixin large-screen{
  @media only screen and (min-width: 64.063em) {
    @content;
  }
}
@mixin large-screen-only{
  @media only screen and (min-width: 64.063em) and (max-width: 90em) {
    @content;
  }
}
@mixin xlarge-screen{
  @media only screen and (min-width: 90.063em) {
    @content;
  }
}
@mixin xlarge-screen-only{
  @media only screen and (min-width: 90.063em) and (max-width: 120em) {
    @content;
  }
}
@mixin xxlarge-screen{
  @media only screen and (min-width: 120.063em) {
    @content;
  }
}